cmake_minimum_required(VERSION 3.8)
#include(CTest) # We include CTest which is part of CMake



enable_testing()
# create the testing file and list of tests
create_test_sourcelist (Benchs
  stenos_benchs.cpp
  bench_all.cpp
  bench_to_csv.cpp
  )

# add the executable
add_executable (stenos_benchs ${Benchs})

#Add blosc2
find_package(Blosc2 QUIET)
if(NOT Blosc2_FOUND)
	message(STATUS "Fetching Blosc2")
	set(BUILD_SHARED OFF CACHE INTERNAL "" FORCE)
	set(BUILD_FUZZERS OFF CACHE INTERNAL "" FORCE)
	set(BUILD_BENCHMARKS OFF CACHE INTERNAL "" FORCE)
	set(BUILD_EXAMPLES OFF CACHE INTERNAL "" FORCE)
	set(BUILD_PLUGINS OFF CACHE INTERNAL "" FORCE)
	set(BUILD_TESTS OFF CACHE INTERNAL "" FORCE)
	set(DEACTIVATE_ZLIB ON CACHE INTERNAL "" FORCE)
	set(HAVE_ZLIB_NG OFF CACHE INTERNAL "" FORCE)
	FetchContent_Declare(
			blosc_fetch
			GIT_REPOSITORY "https://github.com/Blosc/c-blosc2"
			GIT_TAG main
			OVERRIDE_FIND_PACKAGE
			#SOURCE_SUBDIR build/cmake
		)
	FetchContent_MakeAvailable(blosc_fetch)
endif()



FetchContent_Declare(
	stenos_dataset_fetch
	GIT_REPOSITORY "https://github.com/Thermadiag/stenos_dataset"
	GIT_TAG master
	#SOURCE_SUBDIR build/cmake
		)
FetchContent_MakeAvailable(stenos_dataset_fetch)


target_link_libraries(stenos_benchs PRIVATE Blosc2::blosc2_static)
target_compile_definitions(stenos_benchs PRIVATE -DHAS_BLOSC)


set_property(TARGET stenos_benchs PROPERTY CXX_STANDARD 14)

# msvc warnings generated by stenos_benchs.cpp
target_compile_definitions(stenos_benchs PRIVATE -D_CRT_SECURE_NO_WARNINGS)

target_compile_definitions(stenos_benchs PRIVATE -DSTENOS_DATA_DIR="${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}")


if(STENOS_BUILD_STATIC)
target_link_libraries(stenos_benchs PRIVATE stenos_static)
message(STATUS "Link benchmarks with static stenos")
else()
target_link_libraries(stenos_benchs PRIVATE stenos)
message(STATUS "Link benchmarks with shared stenos")
endif()

target_include_directories(stenos_benchs PRIVATE ${CMAKE_CURRENT_SOURCE_DIR})
target_include_directories(stenos_benchs PRIVATE ${CMAKE_CURRENT_BINARY_DIR}/../..)
target_include_directories(stenos_benchs PRIVATE ${CMAKE_CURRENT_BINARY_DIR}/..)

# remove the test driver source file
set (BenchsToRun ${Benchs})
remove (BenchsToRun stenos_benchs.cpp)

# Add all the ADD_TEST for each test
foreach (bench ${BenchsToRun})
  get_filename_component (TName ${bench} NAME_WE)
  add_test (NAME ${TName} COMMAND stenos_benchs ${TName})
endforeach ()

install (TARGETS stenos_benchs RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR} )

# Copy data set to install dir
install(DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/../_deps/stenos_dataset_fetch-src/dataset"
        TYPE DATA)
        #DESTINATION ${CMAKE_INSTALL_BINDIR}/../)


